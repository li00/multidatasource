<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--扫描*.properties文件-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath*:jdbc.properties"/>
    </bean>
    <!--配置数据源1-->
    <bean id="dataSource2" class="com.alibaba.druid.pool.DruidDataSource">
        <!-- 驱动类-->
        <property name="driverClassName" value="${driver}"/>
        <!-- 连接地址-->
        <property name="url" value="${url2}"/>
        <!-- 数据库用户名-->
        <property name="username" value="${username}"/>
        <!-- 数据库密码-->
        <property name="password" value="${password}"/>
        <property  name="minIdle"  value="1"/>
        <property  name="initialSize"  value="1"/>
        <property  name="maxActive" value="20"/>
        <property  name="maxWait"  value="2000"/>
    </bean>
    <!-- 创建SessionFactory-->
    <bean id="sqlSessionFactory2" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 引用的数据源-->
        <property name="dataSource" ref="dataSource2"/>
        <!-- 加载mybatis配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <!-- 给指定包下所有的类取类型别名-->
        <property name="typeAliasesPackage" value="p.lzf.mutldatasource.model" />
    </bean>
    <!--扫描Mapper接口-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--多数据源一定要加上这行-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory2"/>
        <!-- 基于包的扫描-->
        <property name="basePackage" value="p.lzf.mutldatasource.mapper.user" />

    </bean>
    <!-- Spring事务管理是通过AOP来完成的-->
    <bean id="txManage" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource2" />
    </bean>
    <!-- 定义切面-->
    <aop:config>
        <!-- 定义切点-->
        <aop:pointcut id="allMethods" expression="execution(* p.lzf.mutldatasource.service.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="allMethods" />
    </aop:config>
    <!-- 配置声明式事务-->
    <tx:advice id="txAdvice" transaction-manager="txManage">
        <tx:attributes>
            <!-- 如果没有事务就创建事务-->
            <tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>
            <!-- 剩下均不加事务-->
            <tx:method name="*" read-only="true" />
        </tx:attributes>
    </tx:advice>
</beans>
